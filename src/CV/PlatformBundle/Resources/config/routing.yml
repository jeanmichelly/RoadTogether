cv_platform_home:
    path:      /{page}
    defaults:  { _controller: CVPlatformBundle:Ride:index, page: 1 }
    requirements:
        page: \d*
    
cv_platform_view:
    path:      /ride/{id}
    defaults:  { _controller: CVPlatformBundle:Ride:view }
    requirements:
        id: \d+
    
cv_platform_add:
    path:      /add
    defaults:  { _controller: CVPlatformBundle:Ride:add }

cv_platform_edit:
    path:      /edit/{id}
    defaults:  { _controller: CVPlatformBundle:Ride:edit }
    requirements:
        id: \d+

cv_platform_delete:
    path:      /delete/{id}
    defaults:  { _controller: CVPlatformBundle:Ride:delete }
    requirements:
        id: \d+

cv_platform_my_rides:
    path:      /my-rides/{page}
    defaults:  { _controller: CVPlatformBundle:Ride:ongoingRidesUser, page: 1 }


cv_platform_search_rides:
    path:      /search-rides
    defaults:  { _controller: CVPlatformBundle:Ride:searchRidesUser }

cv_platform_focus_rides:
    path:      /focus-rides/{departure}/{arrival}/{departure_date}/{page}
    defaults:  { _controller: CVPlatformBundle:Ride:focusRidesUser, page: 1 }

cv_platform_reservation_ride:
    path:      /reservation-ride/{id}
    defaults:  { _controller: CVPlatformBundle:Reservation:reservationRide }
    requirements:
        id: \d+

cv_platform_add_public_message:
    path:      /reservation-ride/add_public_message/{ride}
    defaults:  { _controller: CVPlatformBundle:PublicMessage:addPublicMessage }

cv_platform_confirm_reservation_ride:
    path:      /confirm-reservation-ride/{id}
    defaults:  { _controller: CVPlatformBundle:Reservation:confirmReservationRide }
    requirements:
        id: \d+


cv_platform_test:
    path:      /test
    defaults:  { _controller: CVPlatformBundle:Test:index }

cv_platform_test_rides_filtered:
    path:      /test/rides_filtered
    defaults:  { _controller: CVPlatformBundle:Test:requestRidesFiltered }

cv_platform_test_ongoing_rides_user:
    path:      /test/ongoing_rides_user
    defaults:  { _controller: CVPlatformBundle:Test:ongoingRidesUser }

