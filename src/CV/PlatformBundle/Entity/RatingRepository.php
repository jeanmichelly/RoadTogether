<?php

namespace CV\PlatformBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * RatingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RatingRepository extends EntityRepository
{
	public function ratingsReceived($page, $nbPerPage, $userId) {
        $query = $this->createQueryBuilder('r')
            ->where('r.relateduser = :user')
                ->setParameter('user', $userId)
            ->orderBy('r.date', 'DESC')
            ->getQuery();

        $query
            ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage);

        return new Paginator($query, true);
	}

    public function ratingsReceivedWithoutPaginator($userId) {
        $query = $this->createQueryBuilder('r')
            ->where('r.relateduser = :user')
                ->setParameter('user', $userId)
            ->orderBy('r.date', 'DESC')
            ->getQuery();

        return $query->getResult();
    }   	

	public function ratingsSended($page, $nbPerPage, $userId) {
        $query = $this->createQueryBuilder('r')
            ->where('r.user = :user')
                ->setParameter('user', $userId)
            ->orderBy('r.date', 'DESC')
            ->getQuery();

        $query
            ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage);

        return new Paginator($query, true);
	}	
}
